{
  "rulesDirectory": [
    "node_modules/tslint-microsoft-contrib"
  ],
  "defaultSeverity": "error",
  "linterOptions": {
    "exclude": [
      ".artifacts/**/*",
      ".build/**/*",
      "wwwroot/**/*",
      "bin/**/*",
      "test/**/*",
      "test-results/**/*",
      "test/coverage-karma/**/*",
      "test/karma-bundle.js",
      "test/karma.conf.js",
      "gulpfile.js",
      "webpack.config.js",
      "./src/plugin/logging/custom-log-appender.ts",
      "**/*.json",
      "package-scripts.js",
      "node_modules/**/*",
      "**/*.spec.ts"
    ]
  },
  "jsRules": {
    "max-line-length": {
      "options": [
        150
      ]
    }
  },
  "rules": {
    "align": [
      true,
      "elements",
      "members",
      "parameters",
      "statements"
    ],
    "await-promise": true,
    "ban-types": [
      true,
      [
        "Object",
        "Avoid using the `Object` type. Did you mean `object`?"
      ],
      [
        "Function",
        "Avoid using the `Function` type. Prefer a specific function type, like `() => void`, `(something: IMyShape) => void`, or `(something: IMyShape) => boolean`."
      ],
      [
        "Boolean",
        "Avoid using the `Boolean` type. Did you mean `boolean`?"
      ],
      [
        "Number",
        "Avoid using the `Number` type. Did you mean `number`?"
      ],
      [
        "String",
        "Avoid using the `String` type. Did you mean `string`?"
      ],
      [
        "Symbol",
        "Avoid using the `Symbol` type. Did you mean `symbol`?"
      ]
    ],
    "completed-docs": [
      true,
      {
        "enums": true,
        "functions": {
          "visibilities": [
            "exported"
          ]
        },
        "methods": {
          "locations": "all",
          "privacies": [
            "public",
            "protected"
          ]
        },
        "properties": {
          "locations": "all",
          "privacies": [
            "public",
            "protected"
          ]
        }
      }
    ],
    "curly": true,
    "indent": true,
    "new-parens": true,
    "no-arg": true,
    "no-bitwise": true,
    "no-console": {
      "options": [
        "debug",
        "info",
        "log",
        "time",
        "timeEnd",
        "trace"
      ],
      "severity": "error"
    },
    "no-function-expression": true,
    "no-unnecessary-local-variable": true,
    "no-var-requires": true,
    "no-void-expression": [
      true,
      "ignore-arrow-function-shorthand"
    ],
    "prefer-const": true,
    "promise-function-async": true,
    "quotemark": [
      true,
      "avoid-escape",
      "avoid-template",
      "single"
    ],
    "semicolon": [
      true,
      "always"
    ],
    "typedef": [
      true,
      "call-signature",
      "parameter",
      "property-declaration",
      "variable-declaration",
      "member-variable-declaration",
      "object-destructuring",
      "array-destructuring"
    ],
    "variable-name": [
      true,
      "allow-leading-underscore",
      "allow-pascal-case",
      "ban-keywords",
      "check-format"
    ],
    // tslint-microsoft-contrib
    // This needs to be thought through as lot of refactoring might be required, set to false
    "max-func-body-length": [
      true,
      {
        "func-body-length": 50,
        "func-expression-body-length": 20,
        "arrow-body-length": 20,
        "method-body-length": 50,
        "ctor-body-length": 20,
        "ignore-comments": true,
        // Don't complain about jasmine test describe() and it() functions, as they can be quite long
        "ignore-parameters-to-function-regex": "^describe|it$"
      }
    ],
    "no-duplicate-imports": true,
    "no-duplicate-super": true,
    "no-duplicate-variable": true,
    "no-invalid-this": true,
    "no-non-null-assertion": true,
    "no-parameter-reassignment": true,
    "no-unnecessary-initializer": true,
    "prefer-readonly": true,
    "triple-equals": [
      true,
      "allow-null-check",
      "allow-undefined-check"
    ],
    "no-var-keyword": true
  }
}
